Операции над матрицами и векторами
##############################################################################

:date: 2017-03-23 09:00



.. default-role:: code
.. contents:: Содержание

Барьеры
=======

Если разные процессы выполняют несинхронизированные или плохо синхронизированные инструкции (вполне типичная ситуация для приложений), а затем нам необходимо собрать с них уже готовые результаты их исполнения, то получается, что в процессе исполнения нашей программы должен быть некий пороговый момент(барьер), после которого исполнение не продолжается, пока все процессы к нему не подойдут. Это структура в mpi реализуется стандартной функцией MPI_Barrier__

.. __: http://mpi.deino.net/mpi_functions/MPI_Barrier.html 

Примерно то же самое можно реализовать с помощью MPI_Wait и MPI_Test, см здесь__

 
.. __: {filename}/extra/P2P.pdf


Введение. Вычислительная линейная алгебра
=====================================================

Наиболее часто встречающейся подзадачей при решении систем линейных уравнений, разложении матриц на множители и прочих прикладных вопросах линейной алгебры. Произведение матрицы A размерами m*n и матрицы B размерами n*k является матрица C=A*B размером m*k , элементы которой вычисляются по формуле:


.. math::
	c_i^j=a_i^1 b_1^j + \dots + a_i^n b_n^j = a_i^s b_s^j 

(в тензорных обозначениях)

Очевидным образом, вычисление каждого элемента не зависит от высления других, поэтому перемножение матриц легко параллелится. Можно разделять между процессами 

* строки первой матрицы (A)
* столбцы второй (B)
* блоки обеих матриц, пользуясь формулой блочного перемножения 


Подробнее об этом в следующей презентации__

.. __: {filename}/extra/Matrices.pdf





Упражнения
==========

#. Распараллелить перемножение матриц по

* а) строкам или столбцам 
* б) блочно.

Перед соединением матрицы использовать барьер. 

Сравнить ускорение на 4,8, 28 процессах с помощью функций MPI_Wtime 

 


Непараллельный код перемножения матриц есть на сервере в файле /tmp/matrices/cgm.c 
