О курсе
################

:date: 2015-09-01 09:00

Почему Python?
==============

Курс предполагает изучения основ информатики и программирования с использованием языка программирования Python. Почему
Python при начальном обучении лучше C можно прочитать в письме_ члена жюри всероссийской олимпиады по информатике Д.П.
Кириенко.

Если передать кратко, то Python — современный универсальный интерпретируемый язык программирования. Его достоинства:

#. Кроссплатформенность (GNU/Linux, Windows, MacOS, Android) и бесплатность.
#. Простой синтаксис и богатые возможности позволяют записывать программы очень кратко, но в то же время понятно.
#. По простоте освоения язык сравним с Basic-ом, но куда более богат возможностями и значительно более современен.
#. Большая стандартная библиотека, предоставляющая возможности по разработке промышленных приложений (работа с сетью,
   GUI, базами данных, вычисления на кластерах и т.д.).

Python на данный момент (данные от 2014 года) является наиболее популярным языком для начального обучения информатике в
среди лучших американских университетов. В частности, восемь университетов из TOP-10 (80%) и 27 университетов из TOP-39
(69%) используют язык Python в CS0 или CS1 курсах.

.. _письме: http://dkirienko.livejournal.com/167787.html

Подход к обучению
=================

Программированию учатся на практике, причём практика существует двух видов:

#. **Задачный подход**. Методика опирается на решение простых задач, которые проверяются на входных и выходных данных.
   Самое важное — программа должна правильно решать поставленную задачу. Качество программного кода при этом не
   оценивается.

   *Плюсы подхода*: ученик не боится писать программы, хорошо «набивает руку» на решении задач и умеет «с закрытыми
   глазами» написать любой известный ему алгоритм.

   *Минусы подхода*: ученик не умеет работать в команде, порождает трудно читаемый и трудно поддерживаемый код, не может
   спроектировать относительно большой программный продукт.

#. **Проектный подход**. Методика опирается на создание проекта, который разрабатывается продолжительное время,
   развивается от версии к версии, отлаживается, тестируется. Тьютор подходит к ученику многократно, вычитывая код,
   объясняя как надо было сделать. При этом программа даже может не работать или работать не всегда правильно.
   Самое важное — программа должна быть качественно спроектирована и написана.

   *Плюсы подхода*: ученик обучается хорошему стилю программирования, понимает, что такое система контроля
   версий, модульное тестирование, рефакторинг.

   *Минусы подхода*: ученик пишет красивый код, но очень медленно и неуверенно; не умеет быстро добиваться правильного
   решения задач, не имеет практики в написании простых алгоритмов.

Данным курсом предполагается попробовать объединить оба подхода вместе: контрольная к каждой лекции — задачный подход,
практические работы — проектный подход.
