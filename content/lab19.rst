Параллельные сортировки 
#######################

:date: 2017-03-09 09:00


.. default-role:: code
.. contents:: Содержание


Постановка задачи
=================

На прошлом занятии вам было предложено распараллелить сортировку пузырьком как пример алгоритма, для которого распараллеливание приводит к снижению быстродействия, а не к возрастанию(!). В этот раз рассмотрим варианты <<правильного>> распараллеливания сортировок.
Итак, требуется расположить в порядке не убывания n элементов массива чисел, равномерно
размещенных на p процессорах. По окончании сортировки на процессорах с меньшими
номерами должны быть размещены элементы массива с меньшими значениями. 
Рассматриваемые далее параллельные алгоритмы предполагают двухэтапную
сортировку: 

* последовательную сортировку фрагментов массива, распределенных по процессорам системы;
* объединение упорядоченных фрагментов массива – перемещение элементов массива между процессорами.

Для уменьшения общего времени выполнения сортировки следует по
возможности сократить время выполнения каждого из указанных этапов, поэтому в
начале обсуждается последовательный алгоритм, показавший наименьшее время
сортировки тестовых массивов. Именно относительно этого алгоритма определяется
эффективность алгоритмов параллельной сортировки. Таким образом, в работе
используется метод определения эффективности относительно «наилучшего» из
имеющихся в распоряжении последовательных алгоритмов сортировки.


Параллельные алгоритмы сортировки
=================================



	

Рассмотрим два параллельных алгоритма сортировки массивов. Первый
разработан на основе метода сдваивания, второй - на основе «обменной сортировки со
слиянием» Бэтчера.


Их описание см. в следующей статье__.

.. __: {filename}/extra/ParallelSort.pdf


(см. стр. 9-16)

Задание 1
=========

Реализовать алгоритм сдваивания, вычислить время работы на 4,16,28 процессах. Сравнить с qsort на разных входах:

* Случайная последовательность
* Последовательность чисел, отсортированных в обратном порядке

Задание 2
=========

То же самое для алгоритма обменной сортировки со слиянием. 
Найти для него оптимальную сеть для 4, 16, 28 процессов.


