Параллельные сортировки 
#######################

:date: 2017-03-09 09:00


.. default-role:: code
.. contents:: Содержание


Постановка задачи
=================

Задача расстановки фрагментов данных в правильном порядке настолько популярна и настолько богата эффектами, что Д.Э. Кнут посвятил ей половину третьего тома своей трилогии "Искусство программирования для ЭВМ". Распараллеливание этой задачи не менее интересно. 

Итак, требуется расположить в порядке неубывания n элементов массива чисел, равномерно
размещенных на p процессорах. По окончании сортировки на процессорах с меньшими
номерами должны быть размещены элементы массива с меньшими значениями(сортировка типа all-to-all) или же они все должны быть собраны в одном массиве на одном узле в правильном порядке(типа all-to-one).
 
Действие почти всех схем сортировки, подразумевающих распараллеливание, происходит в несколько этапов : 

* последовательная сортировка фрагментов массива, распределенных по процессорам(узлам) системы;
* объединение(слияние) упорядоченных фрагментов массива – перемещение элементов массива между узлами с целью согласования их порядка (чтоб весь большой массив в-общем был упорядочен).

Для уменьшения общего времени выполнения сортировки следует по
возможности сократить время выполнения каждого из указанных этапов, поэтому в
начале обсуждается последовательный алгоритм, показавший наименьшее время
сортировки тестовых массивов. Именно относительно этого алгоритма определяется
эффективность алгоритмов параллельной сортировки. Таким образом, в работе
используется метод определения эффективности относительно «наилучшего» из
имеющихся в распоряжении последовательных алгоритмов сортировки.


Параллельные алгоритмы сортировки
=================================



	

Рассмотрим два параллельных алгоритма сортировки массивов. Первый
разработан на основе метода сдваивания - после сортировки своего фрагмента на каждом узле - фрагменты массивов попарно сливаются , второй - на основе «обменной сортировки со
слиянием» Бэтчера.


Их описание и некоторые результаты по их эффективности на разных массивах чисел см. в следующей статье__.

.. __: {filename}/extra/ParallelSort.pdf


(см. стр. 9-16)

Задание 1
=========

На этом занятии предлагается Реализовать алгоритм сдваивания, вычислить время работы на 4,16,28 процессах. Сравнить с qsort на разных входах:

* Случайная последовательность
* Последовательность чисел, отсортированных в обратном порядке




