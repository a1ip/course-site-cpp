send , reduce , scatter, gather, блокировка
хитрый Hello, world (с указанием номера треда)
слияние массивов (бинарное и не только)
суммирование массивов


Введение в удаленную разработку и распараллеливание 
###################################################

:test_comment: Контрольная не предусмотрена



:date: 2017-02-16 09:00

.. default-role:: code
.. contents:: Содержание

Зачем нужно распараллеливание
=============================

Широко известный закон Мура (см., например,
 .. __: https://ru.wikipedia.org/wiki/%D0%97%D0%B0%D0%BA%D0%BE%D0%BD_%D0%9C%D1%83%D1%80%D0%B0
 ) начал давать сбой ещё в конце 90-х. Но к хорошему (в данном случае к экспоненциальному росту вычислительных мощностей) уже успели прочно привыкнуть, поэтому примерно к тому самому времени и относится начало первого всплеска интереса к параллельным вычислениям. Идея за ними стоит очень простая: если 2 конвейера собирают одинаковые автомобили, то, работая одновременно, они соберут за то же время в 2 раза больше автомобилей. Собственно, первые применения параллельных архитектур были уже в самых ранних персональных (!) компьютерах IBM PC AT 80286 (1982). Там стояли 2 процессора: собственно CPU и его т.н. математический сопроцессор, устроенный внутри как стек и имеющий собственную (отличную от основного ЦП) систему команд - он отвечал за операции с плавающей запятой, в то время, как ЦП оперировал с целыми.

в современных высокопроизводительных вычислительных системах как правило соединяются одинаковые или почти одинаковые по свойствам вычислительные узлы. Идея эта оказалась настолько продуктивной, что со временем сама "гонка вычислительных вооружений" стала ассоциироваться с построения новых параллельных архитектур. По состоянию на июнь прошлого (2016) года:
 .. __:https://www.top500.org/lists/2016/06/

С чем будем работать
====================

Учиться писать параллельные программы будем на базе учебного кластера МФТИ. По ссылке его описание: 

.. __: {filename}/extra/teach_cluster_mipt.pdf

С чего начать
=============

Обучение программированию на любом языке обычно начинают с приветствия всего мира, и мы нестанем нарушать эту добрую традицию. Только на сей раз пусть каждый узел приветствует мир, сообщая одновременно свой номер. 

Задание 1: Написать программу для кластера, которая печатает "Hello, world!" вместе с номером треда, на котором исполняется.
